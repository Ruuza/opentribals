"""Init

Revision ID: 3205ae7c8331
Revises: 
Create Date: 2025-05-11 06:52:10.767349

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3205ae7c8331'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('ARCHER', 'SWORDSMAN', 'KNIGHT', 'SKIRMISHER', 'NOBLEMAN', name='unitname').create(op.get_bind())
    sa.Enum('HEADQUARTERS', 'WOODCUTTER', 'CLAY_PIT', 'IRON_MINE', 'FARM', 'STORAGE', 'BARRACKS', name='buildingtype').create(op.get_bind())
    op.create_table('buildingevent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('village_id', sa.Integer(), nullable=False),
    sa.Column('building_type', postgresql.ENUM('HEADQUARTERS', 'WOODCUTTER', 'CLAY_PIT', 'IRON_MINE', 'FARM', 'STORAGE', 'BARRACKS', name='buildingtype', create_type=False), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('complete_at', sa.DateTime(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player',
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unittrainingevent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('village_id', sa.Integer(), nullable=False),
    sa.Column('unit_type', postgresql.ENUM('ARCHER', 'SWORDSMAN', 'KNIGHT', 'SKIRMISHER', 'NOBLEMAN', name='unitname', create_type=False), nullable=True),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('complete_at', sa.DateTime(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('battlemessage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_player_id', sa.Uuid(), nullable=True),
    sa.Column('to_player_id', sa.Uuid(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('battle_data', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('displayed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['from_player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['to_player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('village',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=24), nullable=False),
    sa.Column('x', sa.Integer(), nullable=False),
    sa.Column('y', sa.Integer(), nullable=False),
    sa.Column('headquarters_lvl', sa.Integer(), nullable=False),
    sa.Column('woodcutter_lvl', sa.Integer(), nullable=False),
    sa.Column('clay_pit_lvl', sa.Integer(), nullable=False),
    sa.Column('iron_mine_lvl', sa.Integer(), nullable=False),
    sa.Column('farm_lvl', sa.Integer(), nullable=False),
    sa.Column('storage_lvl', sa.Integer(), nullable=False),
    sa.Column('barracks_lvl', sa.Integer(), nullable=False),
    sa.Column('swordsman', sa.Integer(), nullable=False),
    sa.Column('archer', sa.Integer(), nullable=False),
    sa.Column('knight', sa.Integer(), nullable=False),
    sa.Column('skirmisher', sa.Integer(), nullable=False),
    sa.Column('nobleman', sa.Integer(), nullable=False),
    sa.Column('horse_units', sa.Integer(), nullable=False),
    sa.Column('wood', sa.Integer(), nullable=False),
    sa.Column('clay', sa.Integer(), nullable=False),
    sa.Column('iron', sa.Integer(), nullable=False),
    sa.Column('population', sa.Integer(), nullable=False),
    sa.Column('population_limit', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_wood_update', sa.DateTime(), nullable=False),
    sa.Column('last_clay_update', sa.DateTime(), nullable=False),
    sa.Column('last_iron_update', sa.DateTime(), nullable=False),
    sa.Column('loyalty', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unitmovement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('village_id', sa.Integer(), nullable=False),
    sa.Column('target_village_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('arrival_at', sa.DateTime(), nullable=True),
    sa.Column('return_at', sa.DateTime(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('archer', sa.Integer(), nullable=False),
    sa.Column('swordsman', sa.Integer(), nullable=False),
    sa.Column('knight', sa.Integer(), nullable=False),
    sa.Column('skirmisher', sa.Integer(), nullable=False),
    sa.Column('nobleman', sa.Integer(), nullable=False),
    sa.Column('return_wood', sa.Integer(), nullable=False),
    sa.Column('return_clay', sa.Integer(), nullable=False),
    sa.Column('return_iron', sa.Integer(), nullable=False),
    sa.Column('is_attack', sa.Boolean(), nullable=False),
    sa.Column('is_support', sa.Boolean(), nullable=False),
    sa.Column('is_spy', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['target_village_id'], ['village.id'], ),
    sa.ForeignKeyConstraint(['village_id'], ['village.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('unitmovement')
    op.drop_table('village')
    op.drop_table('battlemessage')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('unittrainingevent')
    op.drop_table('player')
    op.drop_table('buildingevent')
    sa.Enum('HEADQUARTERS', 'WOODCUTTER', 'CLAY_PIT', 'IRON_MINE', 'FARM', 'STORAGE', 'BARRACKS', name='buildingtype').drop(op.get_bind())
    sa.Enum('ARCHER', 'SWORDSMAN', 'KNIGHT', 'SKIRMISHER', 'NOBLEMAN', name='unitname').drop(op.get_bind())
    # ### end Alembic commands ###
